From 07afc995feaea373516dc89f20c56eae870ce8ab Mon Sep 17 00:00:00 2001
From: nrudenko <nikita.rudenko@intel.com>
Date: Thu, 11 Jun 2020 20:41:16 +0300
Subject: [PATCH] Refactor GenXSPIRV Adaptors and remove some embargo

Change-Id: Ia50c84326986df4595d755a4082e78d0917fec51
CI-Depends: Ia50c84326986df4595d755a4082e78d0917fec51
---
 .../llvm/GenXIntrinsics/GenXMetadata.h        |  4 +-
 .../GenXIntrinsics/GenXSPIRVReaderAdaptor.cpp | 49 ++++++++-----------
 .../GenXIntrinsics/GenXSPIRVWriterAdaptor.cpp |  4 +-
 3 files changed, 23 insertions(+), 34 deletions(-)

diff --git a/GenXIntrinsics/include/llvm/GenXIntrinsics/GenXMetadata.h b/GenXIntrinsics/include/llvm/GenXIntrinsics/GenXMetadata.h
index 2c61586..0168392 100755
--- a/GenXIntrinsics/include/llvm/GenXIntrinsics/GenXMetadata.h
+++ b/GenXIntrinsics/include/llvm/GenXIntrinsics/GenXMetadata.h
@@ -61,11 +61,11 @@ const static char VCStackCall[] = "VCStackCall";
 const static char VCArgumentIOKind[] = "VCArgumentIOKind";
 const static char VCFloatControl[] = "VCFloatControl";
 const static char VCSLMSize[] = "VCSLMSize";
+const static char VCArgumentKind[] = "VCArgumentKind";
+const static char VCArgumentDesc[] = "VCArgumentDesc";
 #ifdef __INTEL_EMBARGO__
 const static char VCNamedBarrierCount[] = "VCNamedBarrierCount";
 const static char VCSIMTCall[] = "VCSIMTCall";
-const static char VCArgumentKind[] = "VCArgumentKind";
-const static char VCArgumentDesc[] = "VCArgumentDesc";
 #endif // __INTEL_EMBARGO__
 } // namespace VCFunctionMD
 
diff --git a/GenXIntrinsics/lib/GenXIntrinsics/GenXSPIRVReaderAdaptor.cpp b/GenXIntrinsics/lib/GenXIntrinsics/GenXSPIRVReaderAdaptor.cpp
index cb9b5ae..b954dce 100755
--- a/GenXIntrinsics/lib/GenXIntrinsics/GenXSPIRVReaderAdaptor.cpp
+++ b/GenXIntrinsics/lib/GenXIntrinsics/GenXSPIRVReaderAdaptor.cpp
@@ -121,7 +121,7 @@ bool GenXSPIRVReaderAdaptor::runOnFunction(Function &F) {
   auto KernelName = F.getName();
   auto ArgKinds = llvm::SmallVector<llvm::Metadata *, 8>();
   auto SLMSize = unsigned(0);
-  auto ArgOffset = unsigned(0);
+  auto ArgOffsets = llvm::SmallVector<llvm::Metadata *, 8>();
   auto ArgIOKinds = llvm::SmallVector<llvm::Metadata *, 8>();
   auto ArgDescs = llvm::SmallVector<llvm::Metadata *, 8>();
 #ifdef __INTEL_EMBARGO__
@@ -130,20 +130,6 @@ bool GenXSPIRVReaderAdaptor::runOnFunction(Function &F) {
 
   llvm::Type *I32Ty = llvm::Type::getInt32Ty(Context);
 
-  for (Function::arg_iterator I = F.arg_begin(), E = F.arg_end(); I != E; ++I) {
-    auto ArgNo = I->getArgNo();
-    auto ArgKind = unsigned(0);
-#ifdef __INTEL_EMBARGO__
-    if (Attrs.hasAttribute(ArgNo + 1, VCFunctionMD::VCArgumentKind)) {
-      Attrs.getAttribute(ArgNo + 1, VCFunctionMD::VCArgumentKind)
-          .getValueAsString()
-          .getAsInteger(0, ArgKind);
-    }
-#endif // __INTEL_EMBARGO__
-    ArgKinds.push_back(
-        llvm::ValueAsMetadata::get(llvm::ConstantInt::get(I32Ty, ArgKind)));
-  }
-
   if (Attrs.hasFnAttribute(VCFunctionMD::VCSLMSize)) {
     Attrs.getAttribute(AttributeList::FunctionIndex, VCFunctionMD::VCSLMSize)
         .getValueAsString()
@@ -152,25 +138,31 @@ bool GenXSPIRVReaderAdaptor::runOnFunction(Function &F) {
 
   for (Function::arg_iterator I = F.arg_begin(), E = F.arg_end(); I != E; ++I) {
     auto ArgNo = I->getArgNo();
-    unsigned ArgKind = 0;
+    auto ArgKind = unsigned(0);
+    auto ArgOffset = unsigned(0);
+    auto ArgIOKind = unsigned(0);
+    auto ArgDesc = std::string();
+    if (Attrs.hasAttribute(ArgNo + 1, VCFunctionMD::VCArgumentKind)) {
+      Attrs.getAttribute(ArgNo + 1, VCFunctionMD::VCArgumentKind)
+          .getValueAsString()
+          .getAsInteger(0, ArgKind);
+    }
     if (Attrs.hasAttribute(ArgNo + 1, VCFunctionMD::VCArgumentIOKind)) {
       Attrs.getAttribute(ArgNo + 1, VCFunctionMD::VCArgumentIOKind)
           .getValueAsString()
-          .getAsInteger(0, ArgKind);
+          .getAsInteger(0, ArgIOKind);
     }
-    ArgIOKinds.push_back(
-        llvm::ValueAsMetadata::get(llvm::ConstantInt::get(I32Ty, ArgKind)));
-  }
-
-  for (Function::arg_iterator I = F.arg_begin(), E = F.arg_end(); I != E; ++I) {
-    auto ArgNo = I->getArgNo();
-    auto ArgDesc = std::string();
-#ifdef __INTEL_EMBARGO__
     if (Attrs.hasAttribute(ArgNo + 1, VCFunctionMD::VCArgumentDesc)) {
       ArgDesc = Attrs.getAttribute(ArgNo + 1, VCFunctionMD::VCArgumentDesc)
-                    .getValueAsString().str();
+                    .getValueAsString()
+                    .str();
     }
-#endif // __INTEL_EMBARGO__
+    ArgKinds.push_back(
+        llvm::ValueAsMetadata::get(llvm::ConstantInt::get(I32Ty, ArgKind)));
+    ArgOffsets.push_back(
+        llvm::ValueAsMetadata::get(llvm::ConstantInt::get(I32Ty, ArgOffset)));
+    ArgIOKinds.push_back(
+        llvm::ValueAsMetadata::get(llvm::ConstantInt::get(I32Ty, ArgIOKind)));
     ArgDescs.push_back(llvm::MDString::get(Context, ArgDesc));
   }
 
@@ -189,8 +181,7 @@ bool GenXSPIRVReaderAdaptor::runOnFunction(Function &F) {
   KernelMD.push_back(llvm::MDString::get(Context, KernelName));
   KernelMD.push_back(llvm::MDNode::get(Context, ArgKinds));
   KernelMD.push_back(ConstantAsMetadata::get(ConstantInt::get(I32Ty, SLMSize)));
-  KernelMD.push_back(
-      llvm::ValueAsMetadata::get(llvm::ConstantInt::get(I32Ty, ArgOffset)));
+  KernelMD.push_back(llvm::MDNode::get(Context, ArgOffsets));
   KernelMD.push_back(llvm::MDNode::get(Context, ArgIOKinds));
   KernelMD.push_back(llvm::MDNode::get(Context, ArgDescs));
 #ifdef __INTEL_EMBARGO__
diff --git a/GenXIntrinsics/lib/GenXIntrinsics/GenXSPIRVWriterAdaptor.cpp b/GenXIntrinsics/lib/GenXIntrinsics/GenXSPIRVWriterAdaptor.cpp
index 9e0a754..3e964b9 100755
--- a/GenXIntrinsics/lib/GenXIntrinsics/GenXSPIRVWriterAdaptor.cpp
+++ b/GenXIntrinsics/lib/GenXIntrinsics/GenXSPIRVWriterAdaptor.cpp
@@ -144,7 +144,6 @@ bool GenXSPIRVWriterAdaptor::runOnFunction(Function &F) {
 
   F.setCallingConv(CallingConv::SPIR_KERNEL);
 
-#ifdef __INTEL_EMBARGO__
   if (KernelMD->getNumOperands() > KernelMDOp::ArgKinds) {
     if (auto *KindsNode =
             dyn_cast<MDNode>(KernelMD->getOperand(KernelMDOp::ArgKinds))) {
@@ -160,7 +159,6 @@ bool GenXSPIRVWriterAdaptor::runOnFunction(Function &F) {
       }
     }
   }
-#endif // __INTEL_EMBARGO__
 
   if (KernelMD->getNumOperands() > KernelMDOp::SLMSize) {
     if (auto *VM = dyn_cast<ValueAsMetadata>(
@@ -189,7 +187,6 @@ bool GenXSPIRVWriterAdaptor::runOnFunction(Function &F) {
     }
   }
 
-#ifdef __INTEL_EMBARGO__
   if (KernelMD->getNumOperands() > KernelMDOp::ArgTypeDescs) {
     if (auto Node =
             dyn_cast<MDNode>(KernelMD->getOperand(KernelMDOp::ArgTypeDescs))) {
@@ -205,6 +202,7 @@ bool GenXSPIRVWriterAdaptor::runOnFunction(Function &F) {
     }
   }
 
+#ifdef __INTEL_EMBARGO__
   if (KernelMD->getNumOperands() > KernelMDOp::NBarrierCnt) {
     if (auto VM = dyn_cast<ValueAsMetadata>(
             KernelMD->getOperand(KernelMDOp::NBarrierCnt)))
-- 
2.21.0

